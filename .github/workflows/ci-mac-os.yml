# This is a basic workflow to help you get started with Actions

name: CI-mac-os

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ '*' ]
    paths-ignore:         # Don't trigger on files that are updated by the CI
      - README.md
  pull_request:
    branches: [ '*' ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: [3.5, 3.6, 3.7, 3.8]
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Setup tmate session
      uses: mxschmitt/action-tmate@v2
    
    - name: Install the dependences
      run: |
        python3 -m pip install --upgrade pip
        brew update
        #install xml libraries
        brew install cpanm
        brew install libxml2 libxslt
        cpanm XML::LibXML XML::XSLT
        cpanm XML::LibXSLT --force
        cpanm Archive::Zip DB_File File::Which Getopt::Long Image::Size IO::String JSON::XS LWP MIME::Base64 Parse::RecDescent Pod::Parser Text::Unidecode Test::More URI UUID::Tiny
        
        # install brew latex packages, libs and lateXML
        brew cask install basictex
        brew install latexml

        # install imagemagick
        brew install imagemagick

        #update PATH 
        bash --login
        
    - name: Test latexml
      run: |
        # add --strict flag to be more strict in error catching
        latexml --noparse --nocomment --strict --path=./amc2moodle --dest=./out.xml  ./test/QCM.tex   
    - name: Install amc2moodle
      run: |
        # add -e to have write access for test. TODO : change with temp file
        pip3 install -e .
    - name: Test amc2moodle
      run: |
        python3 -m amc2moodle.test
    - name: Archive test output (no tikz)
      if: ${{ always() }}
      uses: actions/upload-artifact@v1
      with:
        name: test_notikz_${{ matrix.python-version }}
        path: test_notikz.xml    
    - name: Archive test output (tikz)
      if: ${{ always() }}
      uses: actions/upload-artifact@v1
      with:
        name: test_tikz_${{ matrix.python-version }}
        path: test_tikz.xml   
